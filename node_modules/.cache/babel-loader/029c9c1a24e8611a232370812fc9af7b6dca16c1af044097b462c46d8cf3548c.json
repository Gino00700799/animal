{"ast":null,"code":"export const animals = [{\n  id: 'giraffe',\n  name: 'Giraffe',\n  emoji: 'ü¶í',\n  diet: 'herbivore',\n  description: 'Tallest mammal in the world',\n  averageWeight: {\n    min: 800,\n    max: 1930\n  },\n  averageHeight: {\n    min: 4.3,\n    max: 5.7\n  },\n  calorieMultiplier: 70,\n  funFacts: ['Can eat up to 75 pounds of vegetation per day', 'Has a 20-inch long tongue', 'Only needs 5-30 minutes of sleep per day']\n}, {\n  id: 'gorilla',\n  name: 'Gorilla',\n  emoji: 'ü¶ç',\n  diet: 'herbivore',\n  description: 'Largest living primate',\n  averageWeight: {\n    min: 70,\n    max: 220\n  },\n  averageHeight: {\n    min: 1.25,\n    max: 1.8\n  },\n  calorieMultiplier: 75,\n  funFacts: ['Shares 98% of DNA with humans', 'Can live up to 50 years', 'Primarily eats leaves, stems, and fruits']\n}, {\n  id: 'zebra',\n  name: 'Zebra',\n  emoji: 'ü¶ì',\n  diet: 'herbivore',\n  description: 'Striped African equid',\n  averageWeight: {\n    min: 200,\n    max: 450\n  },\n  averageHeight: {\n    min: 1.1,\n    max: 1.5\n  },\n  calorieMultiplier: 65,\n  funFacts: ['Each zebra has a unique stripe pattern', 'Can run up to 65 km/h', 'Lives in herds for protection']\n}, {\n  id: 'elephant',\n  name: 'Elephant',\n  emoji: 'üêò',\n  diet: 'herbivore',\n  description: 'Largest land mammal',\n  averageWeight: {\n    min: 2700,\n    max: 6000\n  },\n  averageHeight: {\n    min: 2.5,\n    max: 4.0\n  },\n  calorieMultiplier: 80,\n  funFacts: ['Can eat up to 300 pounds of food per day', 'Has excellent memory', 'Can live up to 70 years']\n}, {\n  id: 'lion',\n  name: 'Lion',\n  emoji: 'ü¶Å',\n  diet: 'carnivore',\n  description: 'King of the jungle',\n  averageWeight: {\n    min: 120,\n    max: 250\n  },\n  averageHeight: {\n    min: 0.9,\n    max: 1.2\n  },\n  calorieMultiplier: 90,\n  meatPercentage: 85,\n  funFacts: ['Can eat up to 15kg of meat in one meal', 'Sleeps 16-20 hours per day', 'Lives in social groups called prides']\n}, {\n  id: 'tiger',\n  name: 'Tiger',\n  emoji: 'üêÖ',\n  diet: 'carnivore',\n  description: 'Largest wild cat',\n  averageWeight: {\n    min: 140,\n    max: 300\n  },\n  averageHeight: {\n    min: 0.9,\n    max: 1.1\n  },\n  calorieMultiplier: 95,\n  meatPercentage: 90,\n  funFacts: ['Can leap horizontally up to 10 meters', 'Excellent swimmers', 'Each tiger has unique stripe patterns']\n}, {\n  id: 'cheetah',\n  name: 'Cheetah',\n  emoji: 'üêÜ',\n  diet: 'carnivore',\n  description: 'Fastest land animal',\n  averageWeight: {\n    min: 35,\n    max: 72\n  },\n  averageHeight: {\n    min: 0.7,\n    max: 0.9\n  },\n  calorieMultiplier: 85,\n  meatPercentage: 95,\n  funFacts: ['Can reach speeds up to 120 km/h', 'Cannot roar, only purr and chirp', 'Has semi-retractable claws for traction']\n}, {\n  id: 'hippo',\n  name: 'Hippopotamus',\n  emoji: 'ü¶õ',\n  diet: 'herbivore',\n  description: 'Semi-aquatic mammal',\n  averageWeight: {\n    min: 1500,\n    max: 3200\n  },\n  averageHeight: {\n    min: 1.3,\n    max: 1.6\n  },\n  calorieMultiplier: 85,\n  funFacts: ['Can hold breath underwater for 5 minutes', 'Secretes natural sunscreen', 'Despite appearance, closely related to whales']\n}];\nexport const getDietInfo = diet => {\n  const dietInfo = {\n    herbivore: {\n      color: 'text-green-600',\n      bgColor: 'bg-green-100',\n      icon: 'üå±',\n      description: 'Plant-eater'\n    },\n    carnivore: {\n      color: 'text-red-600',\n      bgColor: 'bg-red-100',\n      icon: 'ü•©',\n      description: 'Meat-eater'\n    },\n    omnivore: {\n      color: 'text-orange-600',\n      bgColor: 'bg-orange-100',\n      icon: 'üçΩÔ∏è',\n      description: 'Eats both plants and meat'\n    }\n  };\n  return dietInfo[diet] || dietInfo.herbivore;\n};","map":{"version":3,"names":["animals","id","name","emoji","diet","description","averageWeight","min","max","averageHeight","calorieMultiplier","funFacts","meatPercentage","getDietInfo","dietInfo","herbivore","color","bgColor","icon","carnivore","omnivore"],"sources":["/Users/ginoanayamendoza/client/src/data/animals.js"],"sourcesContent":["export const animals = [\n  {\n    id: 'giraffe',\n    name: 'Giraffe',\n    emoji: 'ü¶í',\n    diet: 'herbivore',\n    description: 'Tallest mammal in the world',\n    averageWeight: { min: 800, max: 1930 },\n    averageHeight: { min: 4.3, max: 5.7 },\n    calorieMultiplier: 70,\n    funFacts: [\n      'Can eat up to 75 pounds of vegetation per day',\n      'Has a 20-inch long tongue',\n      'Only needs 5-30 minutes of sleep per day'\n    ]\n  },\n  {\n    id: 'gorilla',\n    name: 'Gorilla',\n    emoji: 'ü¶ç',\n    diet: 'herbivore',\n    description: 'Largest living primate',\n    averageWeight: { min: 70, max: 220 },\n    averageHeight: { min: 1.25, max: 1.8 },\n    calorieMultiplier: 75,\n    funFacts: [\n      'Shares 98% of DNA with humans',\n      'Can live up to 50 years',\n      'Primarily eats leaves, stems, and fruits'\n    ]\n  },\n  {\n    id: 'zebra',\n    name: 'Zebra',\n    emoji: 'ü¶ì',\n    diet: 'herbivore',\n    description: 'Striped African equid',\n    averageWeight: { min: 200, max: 450 },\n    averageHeight: { min: 1.1, max: 1.5 },\n    calorieMultiplier: 65,\n    funFacts: [\n      'Each zebra has a unique stripe pattern',\n      'Can run up to 65 km/h',\n      'Lives in herds for protection'\n    ]\n  },\n  {\n    id: 'elephant',\n    name: 'Elephant',\n    emoji: 'üêò',\n    diet: 'herbivore',\n    description: 'Largest land mammal',\n    averageWeight: { min: 2700, max: 6000 },\n    averageHeight: { min: 2.5, max: 4.0 },\n    calorieMultiplier: 80,\n    funFacts: [\n      'Can eat up to 300 pounds of food per day',\n      'Has excellent memory',\n      'Can live up to 70 years'\n    ]\n  },\n  {\n    id: 'lion',\n    name: 'Lion',\n    emoji: 'ü¶Å',\n    diet: 'carnivore',\n    description: 'King of the jungle',\n    averageWeight: { min: 120, max: 250 },\n    averageHeight: { min: 0.9, max: 1.2 },\n    calorieMultiplier: 90,\n    meatPercentage: 85,\n    funFacts: [\n      'Can eat up to 15kg of meat in one meal',\n      'Sleeps 16-20 hours per day',\n      'Lives in social groups called prides'\n    ]\n  },\n  {\n    id: 'tiger',\n    name: 'Tiger',\n    emoji: 'üêÖ',\n    diet: 'carnivore',\n    description: 'Largest wild cat',\n    averageWeight: { min: 140, max: 300 },\n    averageHeight: { min: 0.9, max: 1.1 },\n    calorieMultiplier: 95,\n    meatPercentage: 90,\n    funFacts: [\n      'Can leap horizontally up to 10 meters',\n      'Excellent swimmers',\n      'Each tiger has unique stripe patterns'\n    ]\n  },\n  {\n    id: 'cheetah',\n    name: 'Cheetah',\n    emoji: 'üêÜ',\n    diet: 'carnivore',\n    description: 'Fastest land animal',\n    averageWeight: { min: 35, max: 72 },\n    averageHeight: { min: 0.7, max: 0.9 },\n    calorieMultiplier: 85,\n    meatPercentage: 95,\n    funFacts: [\n      'Can reach speeds up to 120 km/h',\n      'Cannot roar, only purr and chirp',\n      'Has semi-retractable claws for traction'\n    ]\n  },\n  {\n    id: 'hippo',\n    name: 'Hippopotamus',\n    emoji: 'ü¶õ',\n    diet: 'herbivore',\n    description: 'Semi-aquatic mammal',\n    averageWeight: { min: 1500, max: 3200 },\n    averageHeight: { min: 1.3, max: 1.6 },\n    calorieMultiplier: 85,\n    funFacts: [\n      'Can hold breath underwater for 5 minutes',\n      'Secretes natural sunscreen',\n      'Despite appearance, closely related to whales'\n    ]\n  }\n];\n\nexport const getDietInfo = (diet) => {\n  const dietInfo = {\n    herbivore: {\n      color: 'text-green-600',\n      bgColor: 'bg-green-100',\n      icon: 'üå±',\n      description: 'Plant-eater'\n    },\n    carnivore: {\n      color: 'text-red-600',\n      bgColor: 'bg-red-100',\n      icon: 'ü•©',\n      description: 'Meat-eater'\n    },\n    omnivore: {\n      color: 'text-orange-600',\n      bgColor: 'bg-orange-100',\n      icon: 'üçΩÔ∏è',\n      description: 'Eats both plants and meat'\n    }\n  };\n  \n  return dietInfo[diet] || dietInfo.herbivore;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}